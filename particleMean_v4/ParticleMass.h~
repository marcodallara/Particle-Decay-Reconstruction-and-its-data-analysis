#ifndef ParticleMass_h
#define ParticleMass_h

class Event;

class ParticleMass {

 public:

  ParticleMass();
  // deleted copy constructor and assignment to prevent unadvertent copy
  ParticleMass           ( const ParticleMass& x ) = delete;
  ParticleMass& operator=( const ParticleMass& x ) = delete;

  virtual ~ParticleMass();

  // function to be called at execution start
  virtual void beginJob() = 0;
  // function to be called at execution end
  virtual void   endJob() = 0;
  // function to be called for each event
  virtual void process( const Event& ev ) = 0;

};

#endif

